//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

[Serializable]
public class AnotherAccountSerialClass : SerialClass{
	public int year;
	public int month;
	public int day;
	public int hour;
	public int minute;
	public int second;
	
	public bool isBGM;
	public bool isEffect;


}

public class AnotherAccountClass
{
	DateTime m_employeeRefreshTime = DateTime.MinValue;

	bool m_isBackgroundMute = false;
	bool m_isEffectMute = false;

	public bool isBackgroundMute{get{ return m_isBackgroundMute; } set{m_isBackgroundMute = value;}}
	public bool isEffectMute{get{ return m_isEffectMute; } set{m_isEffectMute = value;}}

	public DateTime employeeRefreshTime { 
		get { return getEmployeeRefreshTime (); }
		set { m_employeeRefreshTime = value;}
	}

	public AnotherAccountClass ()
	{
//		saveData ();
	}

	/// <summary>
	/// 저장하기
	/// </summary>
	/// <returns>The data.</returns>
	public AnotherAccountSerialClass saveData(){

		AnotherAccountSerialClass anotherData = new AnotherAccountSerialClass ();
		anotherData.year = m_employeeRefreshTime.Year;
		anotherData.month = m_employeeRefreshTime.Month;
		anotherData.day = m_employeeRefreshTime.Day;
		anotherData.hour = m_employeeRefreshTime.Hour;
		anotherData.minute = m_employeeRefreshTime.Minute;
		anotherData.second = m_employeeRefreshTime.Second;


		anotherData.isBGM = m_isBackgroundMute;
		anotherData.isEffect = m_isEffectMute;

		return anotherData;
//		IODataClass.GetInstance.saveData (accountData, "AnotherInfo");
	}

	/// <summary>
	/// 불러오기
	/// </summary>
	/// <returns><c>true</c>, if data was loaded, <c>false</c> otherwise.</returns>
	/// <param name="anotherData">Another data.</param>
	public bool loadData(AnotherAccountSerialClass anotherData){
		if (anotherData != null) {
			m_employeeRefreshTime = new DateTime(anotherData.year, anotherData.month, anotherData.day, anotherData.hour, anotherData.minute, anotherData.second);

			m_isBackgroundMute = anotherData.isBGM;
			m_isEffectMute = anotherData.isEffect;

			Debug.Log ("로드 완료 : " + GetType ());
			return true;
		}
		Debug.Log ("로드 불가능 : " + GetType ());
		return false;
	}

	public void setEmployeeRefreshTime(DateTime nowTime){
		m_employeeRefreshTime = nowTime;
	}

	/// <summary>
	/// 현재 시간 가져오기
	/// </summary>
	/// <returns>The employee refresh time.</returns>
	private DateTime getEmployeeRefreshTime(){
		if (m_employeeRefreshTime == DateTime.MinValue)
			m_employeeRefreshTime = DateTime.Now;
//		saveData ();
		return m_employeeRefreshTime;
	}
}


