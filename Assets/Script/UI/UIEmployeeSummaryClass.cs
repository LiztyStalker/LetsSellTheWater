//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Events;

public class UIEmployeeSummaryClass : UIObjectClass
{

	[SerializeField] Text m_nameText;
	[SerializeField] Image m_iconImage;
	[SerializeField] Text m_genderText;
	[SerializeField] Text m_characterTypeText;
	[SerializeField] Text m_rankText;

	[SerializeField] Text m_healthText;
	[SerializeField] Text m_quicknessText;
	[SerializeField] Text m_intelligenceText;
	[SerializeField] Text m_charmText;
	[SerializeField] Text m_empFeeText;

	[SerializeField] Text m_usePosText;
	[SerializeField] Text m_statusText;
	[SerializeField] Text m_btnText;

	[SerializeField] TYPE_PANEL m_typePanel;


	UIObjectClass m_parent;
	int m_nowPos = 0;

	EmployeeClass m_employee;


	public EmployeeClass employee{ get { return m_employee; } }

	/// <summary>
	/// 직원 요약 초기화
	/// </summary>
	/// <param name="parent">Parent.</param>
	/// <param name="facility">Facility.</param>
	/// <param name="nowPos">Now position.</param>
	public void setEmployeeClass(UIObjectClass parent, EmployeeClass employee, int nowPos = 0){
		
		m_parent = parent;
		m_employee = employee;
		m_nowPos = nowPos;
		
		if (m_nowPos == 0) {
			GetComponent<Button> ().enabled = true;
			GetComponent<Button> ().onClick.AddListener (new UnityAction (employeeClicked));
		}
		else
			GetComponent<Button> ().enabled = false;
		
		setPanelView ();
	}
	
	public void setPanelView(){

		m_nameText.text = m_employee.name;
		m_iconImage.sprite = m_employee.faceIcon;
		m_genderText.text = m_employee.gender.ToString();
		m_characterTypeText.text = TranslatorClass.GetInstance.getCharacterWord (m_employee.characterType);
		m_rankText.text = TranslatorClass.GetInstance.getRank (m_employee.rank);
		
		m_healthText.text = m_employee.health.ToString();
		m_quicknessText.text = m_employee.quickness.ToString();
		m_intelligenceText.text = m_employee.intelligence.ToString();
		m_charmText.text = m_employee.charm.ToString();
		m_empFeeText.text = m_employee.employmentFee.ToString ();
		
		m_usePosText.text = (m_employee.usePos == 0) ? "-" : string.Format("{0}-{1}", m_employee.usePos / 100, m_employee.usePos % 100);
		m_statusText.text = (m_employee.usePos == 0) ? "-" : "작업중";
		m_btnText.text = (m_nowPos == 0) ? "해고" : "배치";

	}

	private void employeeClicked(){
		UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.NONE);
		UIMadiatorClass.UIEmployeePanelView (m_parent, m_employee, m_typePanel, m_employee.usePos);
	}

	/// <summary>
	/// 보조버튼 클릭
	/// </summary>
	public void subBtnClicked(){
		//0이면 판매
		//1이상이면 배치 또는 변경 - 사용중인 시설이면 불가능
		//

		if (m_nowPos == 0) {
			//판매
			Debug.Log ("판매 : " + m_nowPos);
			if (m_employee.usePos != 0){
				effectSoundPlayer(TYPE_AUDIO.WARNING);
				UIMadiatorClass.UIMsgPanelView.initMsgPanel("작업중인 직원은 해고할 수 없습니다.", TYPE_MSG_ICON.ERROR);
			}
			else {
				fireEmployee ();
				//				UIMadiatorClass.UIMsgPanelView("판매하시겠습니까?");
			}
		} else {
			
			if(m_employee.usePos != 0){
				effectSoundPlayer(TYPE_AUDIO.WARNING);
				UIMadiatorClass.UIMsgPanelView.initMsgPanel ("작업중인 직원은 배치 및 변경할 수 없습니다.", TYPE_MSG_ICON.ERROR);
				return;
			}
			
			
			
			UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.OK);

			//생산라인 가져오기
			UIProductionLineClass productLine = UIMadiatorClass.getUIProductionLine(m_nowPos);
			
		
			//삽입
			if(productLine.employeeCase.employee == null){
				m_employee.usePos = m_nowPos;
				productLine.initEmployeeCase(m_employee);
				Debug.Log("삽입");
			}
			
			//변경
			else{
				
				// 삽입 m_facility
				// 위치 변경 productLine.facility
				
				//productLine.facilityCase.facility;
				
				productLine.employeeCase.employee.usePos = 0;
				
				m_employee.usePos = m_nowPos;
				productLine.initEmployeeCase(m_employee);
				Debug.Log("변경");
				
				//모든 시설요약버튼 새로고침
				
				//현재 시설 반환
				//새 시설 삽입
			}
			
			
			
			
			setPanelView();
			
			Debug.Log ("장착 : " + m_nowPos);
			UIMadiatorClass.UIMsgPanelView.initMsgPanel("배치 완료", TYPE_MSG_ICON.INFOR);
			
			m_parent.gameObject.SetActive(false);
		}
	}
	
	
	
	
	
	
	/// <summary>
	/// 직원 해고하기
	/// </summary>
	private void fireEmployee(){
		//		UIProductionLineClass productLine = UIMadiatorClass.getUIProductionLine(m_nowPos);
		
		//		Debug.Log ("productLine " + productLine);
		
		if (AccountClass.GetInstance.fireEmployee (m_employee)) {
			//상위 리스트 오브젝트도 제거해야 함 - 상관없음

			effectSoundPlayer(TYPE_AUDIO.SELL);

			Debug.Log("직원 해고");
			
			Destroy(gameObject);
		}
	}
	
	public void removePanel(){
		Destroy (gameObject);
	}


}


