//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class UIResearchManagementClass : UIObjectClass
{


	[SerializeField] GameObject m_viewPanel;
	[SerializeField] GameObject m_queuePanel;
	[SerializeField] UIResearchSummaryClass m_researchSummaryClass;
	[SerializeField] UIResearchSummaryClass m_researchQueueBtn;

	List<UIResearchSummaryClass> m_tmpList = new List<UIResearchSummaryClass>();
	List<UIResearchSummaryClass> m_tmpQueueList = new List<UIResearchSummaryClass>();

	int panelIndex = 0;

	public bool isPanelIndex(int nowPanelIndex){
		researchQueueView ();
		return (panelIndex == nowPanelIndex) ? true : false;
	}

	public void setManagementPanel(UIObjectClass uiObject = null, int index = 1){

		researchManagementView (index);
		researchQueueView ();
//		AccountClass.GetInstance.researchAccount.setRefreshResearchDelegate (refreshManagementView);
		gameObject.SetActive (true);
	}

	//연구 완료 - 빠른 연구
	//연구 취소 
	//연구 등록 시 현재 패널과 연구 패널의 종류가 맞으면 새로고침
//	private void refreshManagementView(){
//		researchManagementView (panelIndex);
//	}


	private void researchManagementView(int index = 1){

		panelIndex = index;

		UIMadiatorClass.UIEffectSoundPlayer (TYPE_AUDIO.NONE);

		Debug.Log ("연구 매니저 뷰");
		researchListClear ();


		foreach (string researchKey in AccountClass.GetInstance.researchAccount.getResearching(index)) {
			Debug.Log ("연구 리스트 : " + researchKey);
			ResearchClass research = ResearchPackageClass.GetInstance.getResearch(researchKey);
			if(research != null){
				UIResearchSummaryClass tmpObj = (UIResearchSummaryClass)Instantiate(m_researchSummaryClass);
				tmpObj.setResearchClass(this, research);
				tmpObj.gameObject.transform.SetParent(m_viewPanel.transform);
				m_tmpList.Add(tmpObj);
			}
		}
	}

	private void researchQueueView(){
		//현재 연구 진행 큐 보여주기
		researchQueueClear ();
		Debug.Log ("연구 큐 보기");
		foreach (ResearchClass research in AccountClass.GetInstance.researchAccount.readyResearch()) {
			UIResearchSummaryClass tmpResearchObj = (UIResearchSummaryClass)Instantiate(m_researchQueueBtn);
			tmpResearchObj.setResearchClass(this, research);
			tmpResearchObj.transform.SetParent(m_queuePanel.transform);
			m_tmpQueueList.Add(tmpResearchObj);
		}

	}

	protected override void OnDisable(){
		panelClear ();
		base.OnDisable ();
	}

	private void panelClear(){
		researchListClear ();
		researchQueueClear ();
	}

	private void researchListClear(){
		foreach (UIResearchSummaryClass tmpObj in m_tmpList) {
			Destroy(tmpObj.gameObject);
		}
		m_tmpList.Clear ();
	}

	private void researchQueueClear(){
		foreach (UIResearchSummaryClass tmpObj in m_tmpQueueList) {
			Destroy(tmpObj.gameObject);
		}
		
		
		m_tmpQueueList.Clear ();
	}

	public void buttonClicked(int index){
		researchManagementView (index);
	}

}


