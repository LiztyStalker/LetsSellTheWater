//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using UnityEngine;
using UnityEngine.UI;
public class UICalenderClass : MonoBehaviour
{
	enum TYPE_WEATHER{SUNNY}

	const int c_timer = 30;

//	int[] days = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

	[SerializeField] Text m_calenderText;
	[SerializeField] Image m_calenderBar;
	[SerializeField] GameObject m_nextWeatherPanel;
	[SerializeField] GameObject m_nowWeatherPanel;

	[SerializeField] Image m_nextWeatherImage;
	[SerializeField] Image m_nowNextWeatherImage;
	[SerializeField] Image m_nowWeatherImage;

	[SerializeField] Sprite[] m_wheatherSprites;

//	TYPE_WEATHER m_weather;

//	int year = 2050;
//	int month = 1;
//	int day = 1;
//	int hour = 0;

	void Start(){
		initCalender ();
	}

	public void initCalender(){
		//날짜
		//1초당 1시간 = 24초는 1일
		//
		StartCoroutine (runDay ());
	}


	IEnumerator runDay(){
		while (gameObject.activeSelf) {

			AccountClass.GetInstance.calenderAccount.runTime(c_timer);

			calenderView();

			yield return new WaitForSeconds(0.1f);
		}
	}

	private void calenderView(){
		int[] timePack = AccountClass.GetInstance.calenderAccount.getTimePack ();
		m_calenderText.text = string.Format ("{0}-{1}-{2}", timePack[0], timePack[1], timePack[2]);
		m_calenderBar.GetComponent<RectTransform>().localScale = new Vector3 ((float)timePack[3] / (float)(c_timer - 1), 1f);
//		m_nowWeatherImage
	}

}


