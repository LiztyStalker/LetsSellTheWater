//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Events;

public class UIResearchSummaryClass : UIObjectClass
{
	enum TYPE_RESSUM{NONE, QUEUE}

	[SerializeField] Image m_iconImage;
	[SerializeField] Text m_nameText;
	[SerializeField] Text m_productText;
	[SerializeField] Text m_costText;
//	[SerializeField] Text m_contentsText;
	[SerializeField] Button m_eventBtn;
	[SerializeField] Image m_ResearchView;

//	[SerializeField] TYPE_PANEL m_typePanel;

	ResearchClass m_research;
	UIObjectClass m_parent;

	public ResearchClass research{ get { return m_research; } }
	
	/// <summary>
	/// 시설 요약 초기화
	/// </summary>
	/// <param name="facility">Facility.</param>
	/// <param name="usePos">Use position.</param>
	public void setResearchClass(UIObjectClass parent, ResearchClass research){//, int nowPos = 0){
		
		gameObject.SetActive (true);
		
		m_parent = parent;
		m_research = research;
		GetComponent<Button> ().onClick.AddListener (new UnityAction (researchClicked));
			
		setPanelView ();
	}

	/// <summary>
	/// 연구 뷰 데이터 보기
	/// </summary>
	public void setPanelView(){
		m_iconImage.sprite = research.sprite;
		m_nameText.text = research.name;
		m_productText.text = research.product.ToString();
		m_costText.text = research.cost.ToString ();

		try{
			m_eventBtn.GetComponentInChildren<Text>().text = (research.isResearch == TYPE_RESEARCH.NONE) ? "연구" : (research.isResearch == TYPE_RESEARCH.RUN) ? "진행중" : "대기";
		}
		catch{
		}

		switch (m_research.isResearch) {
		case TYPE_RESEARCH.NONE:
			m_eventBtn.GetComponent<Image>().color = Color.white;
			m_ResearchView.color = Color.white;
			break;
		case TYPE_RESEARCH.WAIT:
			m_eventBtn.GetComponent<Image>().color = Color.yellow;
			m_ResearchView.color = Color.yellow;
			break;
		case TYPE_RESEARCH.RUN:
			m_eventBtn.GetComponent<Image>().color = Color.red;
			m_ResearchView.color = Color.red;
			break;
		}


	}
	
	
	private void researchClicked(){
		if (m_research != null) {
			UIMadiatorClass.UIEffectSoundPlayer (TYPE_AUDIO.OK);
			UIMadiatorClass.UIResearchPanelView (m_parent, m_research);//, m_facility.usePos);
		}
	}

	/// <summary>
	/// 보조버튼 클릭
	/// </summary>
	public void subBtnClicked(){
		//연구
		//연구 큐에 삽입

		Debug.Log ("클릭");
		if (research.isResearch == TYPE_RESEARCH.NONE) {
			if(m_research.cost <= AccountClass.GetInstance.assets){
				if(AccountClass.GetInstance.researchAccount.addResearch (m_research)){
					AccountClass.GetInstance.addAssets(-m_research.cost, TYPE_FINANCE.RESEARCH);
					string index = m_research.key.Substring (2, 2);
					UIMadiatorClass.UIResearchManagementPanel (int.Parse (index));
					//매니지먼트 재구성
					UIMadiatorClass.ResearchWakeUp ();
					UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.OK);
				}
				else{
					UIMadiatorClass.UIMsgPanelView.initMsgPanel("연구 슬롯이 꽉 찼습니다.", TYPE_MSG_ICON.INFOR);
					UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.WARNING);
				}
			}
			else{
				UIMadiatorClass.UIMsgPanelView.initMsgPanel("자금이 부족합니다.", TYPE_MSG_ICON.ERROR);
				UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.WARNING);
			}
		} else {
			UIMadiatorClass.UIMsgPanelView.initMsgPanel("취소하시겠습니까?\n현재까지 연구된 데이터는 사라지며\n 연구비용을 돌려받지 못합니다.", researchCancelEvents, TYPE_MSG_SIGN.OKCANCEL, TYPE_MSG_ICON.WARNING);
			//진행 및 대기 취소
		}
		setPanelView ();

	}

	private void researchCancelEvents(){
		if(AccountClass.GetInstance.researchAccount.cancelResearch(research)){
			//취소하시겠습니까?
			//여태까지 연구된 데이터는 사라집니다.
			UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.OK);
			((UIResearchManagementClass)m_parent).setManagementPanel(m_parent, int.Parse (research.key.Substring (2, 2)));
		}
		else{
			Debug.Log("취소 실패 : " + research.key);
		}
	}

}


