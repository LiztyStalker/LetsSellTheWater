//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using UnityEngine;
using UnityEngine.UI;

public class UIResearchClass : UIObjectClass
{
//	[SerializeField] Text m_titleText;
	[SerializeField] Image m_iconImage;
	[SerializeField] Text m_nameText;
	[SerializeField] Text m_ResearchDataText;
	[SerializeField] Text m_costText;
	[SerializeField] Text m_contentsText;
	[SerializeField] Text m_btnText;
	[SerializeField] Text m_researchText;
	[SerializeField] RectTransform m_researchBar;

	[SerializeField] GameObject m_productPanel;
	[SerializeField] GameObject m_contPanel;
	[SerializeField] GameObject m_timePanel;

	[SerializeField] Text m_productViewText;
	[SerializeField] Text m_productText;
	[SerializeField] Text m_contText;
	[SerializeField] Text m_timeText;

	
//	[SerializeField] GameObject m_viewPanel;
	[SerializeField] GameObject m_GraphPanel;
	[SerializeField] GameObject m_readyPanel;
	[SerializeField] GameObject m_runPanel;

	TYPE_RESEARCH m_panelType;

	ResearchClass m_research;
	UIObjectClass m_parent;

	/// <summary>
	/// 연구창 열기
	/// </summary>
	/// <param name="employee">직원.</param>
	/// <param name="panelType">패널 타입.</param>
	/// <param name="usePos">현재 위치.</param>
	public void setResearchPanel(UIObjectClass parent, ResearchClass research){
		m_parent = parent;
		m_research = research;
		//현재 업그레이드 창을 열었을 때 연구 완료시 Text에 연구 완료 메시지 출력후 하단 버튼 없어짐
		//업그레이드 완료시 다음 업그레이드가 현재 업그레이드로 왔을 때 업그레이드 창 새로 고침
//		AccountClass.GetInstance.researchAccount.setRefreshResearchDelegate (panelClose);
		classPanelView ();
		
	}



	/// <summary>
	/// 연구 패널 보이기
	/// </summary>
	private void classPanelView(){
		gameObject.SetActive (true);
		Debug.Log ("보기");


		m_productPanel.SetActive (false);
		m_contPanel.SetActive (false);
		m_timePanel.SetActive (false);

		if (m_research != null) {

			StartCoroutine(panelUpdate());
			
			
		} 
		else {
			m_iconImage.sprite = null;
			m_nameText.text = "-";
			m_ResearchDataText.text = "-";
			m_contentsText.text = "-";
//			m_btnText.text = "-";
			
		}
		
		panelView (m_research.isResearch);

	}

	IEnumerator panelUpdate(){


		m_iconImage.sprite = m_research.sprite;
		m_nameText.text = m_research.name;
		m_ResearchDataText.text = m_research.product.ToString();
		m_contentsText.text = m_research.contents;
		m_costText.text = m_research.cost.ToString();
		m_btnText.text = "연구";

		if (m_research.key.Substring (2, 2) == "02") {

			FacilityClass facility = FacilityPackageClass.GetInstance.getFacility (m_research.key);
			if(facility != null){


					m_productPanel.SetActive (true);
					m_timePanel.SetActive (true);


						

					switch(facility.facilityType){
					case TYPE_FACILITY.PRODUCT:
						m_productViewText.text = "용량";
						m_contPanel.SetActive (true);
						m_contText.text = string.Format("{0:f3}", facility.contamination);
						break;
					case TYPE_FACILITY.MANUFACTURE:
						m_productViewText.text = "수량";
						break;
					case TYPE_FACILITY.BUSINESS:
						m_productViewText.text = "판매가";
						break;
					case TYPE_FACILITY.RESEARCH:
						m_productViewText.text = "연구량";
						break;
					}

				m_productText.text = string.Format ("{0}", facility.product);
				m_timeText.text = string.Format ("{0:f2}", facility.time);
			}
			else{
				Debug.Log("시설 없음");
				m_iconImage.sprite = null;
				m_nameText.text = "-";
				m_ResearchDataText.text = "-";
				m_contentsText.text = "-";
				//	시설 없음
			}
       }
      

		while (gameObject.activeSelf) {

////			m_titleText.text = ;



			switch (m_panelType) {
			case TYPE_RESEARCH.RUN:
				m_researchText.text = string.Format("연구중\n{0}", AccountClass.GetInstance.researchAccount.researchDataFormat ());
				m_researchBar.localScale = new Vector3 (AccountClass.GetInstance.researchAccount.researchRatio (), 1f);
				break;
			case TYPE_RESEARCH.WAIT:
				m_researchText.text = string.Format("대기중");
				m_researchBar.localScale = Vector3.up;
				break;
			}

			panelView (m_research.isResearch);

			yield return null;
		}

	}

	private void panelView(TYPE_RESEARCH panelType){
		m_panelType = panelType;
		switch (m_panelType) {
		case TYPE_RESEARCH.NONE:
			m_GraphPanel.SetActive(false);
			m_readyPanel.SetActive(true);
			m_runPanel.SetActive(false);
			break;
		case TYPE_RESEARCH.RUN:
			m_GraphPanel.SetActive(true);
			m_readyPanel.SetActive(false);
			m_runPanel.SetActive(true);
			break;
		case TYPE_RESEARCH.WAIT:
			m_GraphPanel.SetActive(true);
			m_readyPanel.SetActive(false);
			m_runPanel.SetActive(true);
			break;
		}
	}

	public void readyResearchClicked(){
		//연구 준비 단계로 바꾸기
		//연구를 진행하시겠습니까?
		UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.SUCCESS);
		if(m_research.cost <= AccountClass.GetInstance.assets){
			if(AccountClass.GetInstance.researchAccount.addResearch (m_research)){
				AccountClass.GetInstance.addAssets(-m_research.cost, TYPE_FINANCE.RESEARCH);

				//연구창 새로고침
				string index = m_research.key.Substring (2, 2);
				UIMadiatorClass.UIResearchManagementPanel (int.Parse (index));

				//매니지먼트 재구성
				UIMadiatorClass.ResearchWakeUp ();
				effectSoundPlayer(TYPE_AUDIO.OK);
				panelClose(true);

			}
			else{
				UIMadiatorClass.UIMsgPanelView.initMsgPanel("연구 슬롯이 꽉 찼습니다.", TYPE_MSG_ICON.INFOR);
				effectSoundPlayer(TYPE_AUDIO.WARNING);
			}
		}
		else{
			UIMadiatorClass.UIMsgPanelView.initMsgPanel("자금이 부족합니다.", TYPE_MSG_ICON.ERROR);
			effectSoundPlayer(TYPE_AUDIO.WARNING);
		}

	}

	public void cancelResearchClicked(){
		UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.NONE);
		UIMadiatorClass.UIMsgPanelView.initMsgPanel("취소하시겠습니까?\n현재까지 연구된 데이터는 사라지며\n 연구비용을 돌려받지 못합니다.", researchCancelEvents, TYPE_MSG_SIGN.OKCANCEL, TYPE_MSG_ICON.WARNING);
	}

	private void researchCancelEvents(){		
		AccountClass.GetInstance.researchAccount.cancelResearch(m_research);
		string index = m_research.key.Substring (2, 2);
		UIMadiatorClass.UIResearchManagementPanel(int.Parse (index));
		effectSoundPlayer(TYPE_AUDIO.OK);
		panelClose (true);
		//연구 취소하기
	}

	public void fastResearchClicked(){
		UIMadiatorClass.UIEffectSoundPlayer(TYPE_AUDIO.NONE);
		if(m_research.pinecola <= AccountClass.GetInstance.pinecola)
			UIMadiatorClass.UIMsgPanelView.initMsgPanel(string.Format("빠른 연구를 진행하시겠습니까?\n{0} 파인콜라가 소모됩니다.", m_research.pinecola), researchFastSuccessEvents, TYPE_MSG_SIGN.OKCANCEL);
		else
			UIMadiatorClass.UIMsgPanelView.initMsgPanel("파인콜라가 부족합니다.", TYPE_MSG_ICON.ERROR);
	}

	/// <summary>
	/// 빠른 연구
	/// </summary>
	private void researchFastSuccessEvents(){
		//빠른 연구하기
		//연구 100당 파인콜라 1
		//일정 금액을 지불하여 빠른 연구하기
		AccountClass.GetInstance.usePineCola (m_research.pinecola);
		AccountClass.GetInstance.researchAccount.fastResearch (m_research);
		string index = m_research.key.Substring (2, 2);
		UIMadiatorClass.UIResearchManagementPanel(int.Parse (index));
		effectSoundPlayer(TYPE_AUDIO.COST);
		panelClose (true);

	}

	protected override void OnDisable(){
		base.OnDisable ();
	}

}


